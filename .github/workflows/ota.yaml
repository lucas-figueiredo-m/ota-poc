name: Trigger on Hotfix Label

on:
  pull_request:
    types: [closed]

jobs:
  trigger-hotfix:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for hotfix label
        id: check_label
        run: |
          echo "Checking PR labels..."
          HOTFIX_LABEL_REGEX="^v[0-9]+\.[0-9]+\.[0-9]+-hotfix\.[0-9]+$"
          MATCHED=false
          MATCHED_VERSION=
          CLEAN_VERSION=
          CLEAN_GENERIC_VERSION=

          labels=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -r '.[].name')
          echo "Labels: $labels"

          for name in $labels; do
            echo "Label name: $name"
            if [[ "$name" =~ $HOTFIX_LABEL_REGEX ]]; then
              MATCHED=true
              MATCHED_VERSION=$name
              clean_version=$(echo "$name" | sed -E 's/^v([0-9]+\.[0-9]+\.[0-9]+)-hotfix\.[0-9]+$/\1/')
              clean_generic_version=$(echo "$clean_version" | sed -E 's/([0-9]+\.[0-9]+)\.[0-9]+/\1.x/')

              echo "CLEAN VERSION: $clean_version"
              echo "CLEAN GENERIC VERSION: $clean_generic_version"
              
              CLEAN_VERSION=$clean_version
              CLEAN_GENERIC_VERSION=$clean_generic_version
              break
            fi
          done

          echo "matched=$MATCHED" >> $GITHUB_OUTPUT
          echo "matched_version=$MATCHED_VERSION" >> $GITHUB_OUTPUT
          echo "clean_version=$CLEAN_VERSION" >> $GITHUB_OUTPUT
          echo "clean_generic_version=$CLEAN_GENERIC_VERSION" >> $GITHUB_OUTPUT

      - name: Check if corresponding release branch exists
        if: steps.check_label.outputs.matched == 'true'
        run: |
          echo "GENERIC VERSION: ${{ steps.check_label.outputs.clean_generic_version }}"
          echo "VERSION: ${{ steps.check_label.outputs.clean_version }}"
          echo "LABEL NAME: ${{ steps.check_label.outputs.matched_version }}"
          echo "matched: ${{ steps.check_label.outputs.matched }}"

          CLEAN_GENERIC_VERSION=${{ steps.check_label.outputs.clean_generic_version }}
          BRANCH_NAME="release/$CLEAN_GENERIC_VERSION"
          echo "Checking if branch $BRANCH_NAME exists..."
          git fetch origin $BRANCH_NAME || true

          if git rev-parse --verify --quiet origin/$BRANCH_NAME; then
            echo "Branch $BRANCH_NAME exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          else
            echo "Branch $BRANCH_NAME does not exist"
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run your hotfix workflow
        if: steps.check_label.outputs.matched == 'true' && steps.check_label.outputs.branch_exists == 'true'
        run: |
          echo "ðŸ”¥ Hotfix label matched! Run your tasks here..."
          echo "matched_version=${{ steps.check_label.outputs.matched_version }}" >> $GITHUB_OUTPUT
